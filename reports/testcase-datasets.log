Traceback (most recent call last):
  File "/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/envs/dev-feisty/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fig, axs = plt.subplots(nrows=2)
forcing.T_pelagic.plot(ax=axs[0])
forcing.T_bottom.plot(ax=axs[1])
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn [6], line 2[0m
[1;32m      1[0m fig, axs [38;5;241m=[39m plt[38;5;241m.[39msubplots(nrows[38;5;241m=[39m[38;5;241m2[39m)
[0;32m----> 2[0m [43mforcing[49m[38;5;241;43m.[39;49m[43mT_pelagic[49m[38;5;241;43m.[39;49m[43mplot[49m[43m([49m[43max[49m[38;5;241;43m=[39;49m[43maxs[49m[43m[[49m[38;5;241;43m0[39;49m[43m][49m[43m)[49m
[1;32m      3[0m forcing[38;5;241m.[39mT_bottom[38;5;241m.[39mplot(ax[38;5;241m=[39maxs[[38;5;241m1[39m])

File [0;32m/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/xarray/plot/accessor.py:46[0m, in [0;36mDataArrayPlotAccessor.__call__[0;34m(self, **kwargs)[0m
[1;32m     44[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(dataarray_plot[38;5;241m.[39mplot, assigned[38;5;241m=[39m([38;5;124m"[39m[38;5;124m__doc__[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m__annotations__[39m[38;5;124m"[39m))
[1;32m     45[0m [38;5;28;01mdef[39;00m [38;5;21m__call__[39m([38;5;28mself[39m, [38;5;241m*[39m[38;5;241m*[39mkwargs) [38;5;241m-[39m[38;5;241m>[39m Any:
[0;32m---> 46[0m     [38;5;28;01mreturn[39;00m [43mdataarray_plot[49m[38;5;241;43m.[39;49m[43mplot[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_da[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/xarray/plot/dataarray_plot.py:312[0m, in [0;36mplot[0;34m(darray, row, col, col_wrap, ax, hue, subplot_kws, **kwargs)[0m
[1;32m    308[0m     plotfunc [38;5;241m=[39m hist
[1;32m    310[0m kwargs[[38;5;124m"[39m[38;5;124max[39m[38;5;124m"[39m] [38;5;241m=[39m ax
[0;32m--> 312[0m [38;5;28;01mreturn[39;00m [43mplotfunc[49m[43m([49m[43mdarray[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/xarray/plot/dataarray_plot.py:1613[0m, in [0;36m_plot2d.<locals>.newplotfunc[0;34m(***failed resolving arguments***)[0m
[1;32m   1609[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mplt.imshow[39m[38;5;124m'[39m[38;5;124ms `aspect` kwarg is not available in xarray[39m[38;5;124m"[39m)
[1;32m   1611[0m ax [38;5;241m=[39m get_axis(figsize, size, aspect, ax, [38;5;241m*[39m[38;5;241m*[39msubplot_kws)
[0;32m-> 1613[0m primitive [38;5;241m=[39m [43mplotfunc[49m[43m([49m
[1;32m   1614[0m [43m    [49m[43mxplt[49m[43m,[49m
[1;32m   1615[0m [43m    [49m[43myplt[49m[43m,[49m
[1;32m   1616[0m [43m    [49m[43mzval[49m[43m,[49m
[1;32m   1617[0m [43m    [49m[43max[49m[38;5;241;43m=[39;49m[43max[49m[43m,[49m
[1;32m   1618[0m [43m    [49m[43mcmap[49m[38;5;241;43m=[39;49m[43mcmap_params[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mcmap[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m
[1;32m   1619[0m [43m    [49m[43mvmin[49m[38;5;241;43m=[39;49m[43mcmap_params[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mvmin[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m
[1;32m   1620[0m [43m    [49m[43mvmax[49m[38;5;241;43m=[39;49m[43mcmap_params[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mvmax[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m
[1;32m   1621[0m [43m    [49m[43mnorm[49m[38;5;241;43m=[39;49m[43mcmap_params[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mnorm[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m
[1;32m   1622[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m
[1;32m   1623[0m [43m[49m[43m)[49m
[1;32m   1625[0m [38;5;66;03m# Label the plot with metadata[39;00m
[1;32m   1626[0m [38;5;28;01mif[39;00m add_labels:

File [0;32m/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/xarray/plot/dataarray_plot.py:2340[0m, in [0;36mpcolormesh[0;34m(x, y, z, ax, xscale, yscale, infer_intervals, **kwargs)[0m
[1;32m   2337[0m         y [38;5;241m=[39m _infer_interval_breaks(y, axis[38;5;241m=[39m[38;5;241m0[39m, scale[38;5;241m=[39myscale)
[1;32m   2339[0m ax[38;5;241m.[39mgrid([38;5;28;01mFalse[39;00m)
[0;32m-> 2340[0m primitive [38;5;241m=[39m [43max[49m[38;5;241;43m.[39;49m[43mpcolormesh[49m[43m([49m[43mx[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43mz[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   2342[0m [38;5;66;03m# by default, pcolormesh picks "round" values for bounds[39;00m
[1;32m   2343[0m [38;5;66;03m# this results in ugly looking plots with lots of surrounding whitespace[39;00m
[1;32m   2344[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mhasattr[39m(ax, [38;5;124m"[39m[38;5;124mprojection[39m[38;5;124m"[39m) [38;5;129;01mand[39;00m x[38;5;241m.[39mndim [38;5;241m==[39m [38;5;241m1[39m [38;5;129;01mand[39;00m y[38;5;241m.[39mndim [38;5;241m==[39m [38;5;241m1[39m:
[1;32m   2345[0m     [38;5;66;03m# not a cartopy geoaxis[39;00m

File [0;32m/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/matplotlib/__init__.py:1423[0m, in [0;36m_preprocess_data.<locals>.inner[0;34m(ax, data, *args, **kwargs)[0m
[1;32m   1420[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(func)
[1;32m   1421[0m [38;5;28;01mdef[39;00m [38;5;21minner[39m(ax, [38;5;241m*[39margs, data[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m   1422[0m     [38;5;28;01mif[39;00m data [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m-> 1423[0m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43max[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;28;43mmap[39;49m[43m([49m[43msanitize_sequence[49m[43m,[49m[43m [49m[43margs[49m[43m)[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   1425[0m     bound [38;5;241m=[39m new_sig[38;5;241m.[39mbind(ax, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m   1426[0m     auto_label [38;5;241m=[39m (bound[38;5;241m.[39marguments[38;5;241m.[39mget(label_namer)
[1;32m   1427[0m                   [38;5;129;01mor[39;00m bound[38;5;241m.[39mkwargs[38;5;241m.[39mget(label_namer))

File [0;32m/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/matplotlib/axes/_axes.py:6171[0m, in [0;36mAxes.pcolormesh[0;34m(self, alpha, norm, cmap, vmin, vmax, shading, antialiased, *args, **kwargs)[0m
[1;32m   6167[0m C [38;5;241m=[39m C[38;5;241m.[39mravel()
[1;32m   6169[0m kwargs[38;5;241m.[39msetdefault([38;5;124m'[39m[38;5;124msnap[39m[38;5;124m'[39m, mpl[38;5;241m.[39mrcParams[[38;5;124m'[39m[38;5;124mpcolormesh.snap[39m[38;5;124m'[39m])
[0;32m-> 6171[0m collection [38;5;241m=[39m [43mmcoll[49m[38;5;241;43m.[39;49m[43mQuadMesh[49m[43m([49m
[1;32m   6172[0m [43m    [49m[43mcoords[49m[43m,[49m[43m [49m[43mantialiased[49m[38;5;241;43m=[39;49m[43mantialiased[49m[43m,[49m[43m [49m[43mshading[49m[38;5;241;43m=[39;49m[43mshading[49m[43m,[49m
[1;32m   6173[0m [43m    [49m[43marray[49m[38;5;241;43m=[39;49m[43mC[49m[43m,[49m[43m [49m[43mcmap[49m[38;5;241;43m=[39;49m[43mcmap[49m[43m,[49m[43m [49m[43mnorm[49m[38;5;241;43m=[39;49m[43mnorm[49m[43m,[49m[43m [49m[43malpha[49m[38;5;241;43m=[39;49m[43malpha[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   6174[0m collection[38;5;241m.[39m_scale_norm(norm, vmin, vmax)
[1;32m   6175[0m [38;5;28mself[39m[38;5;241m.[39m_pcolor_grid_deprecation_helper()

File [0;32m/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/matplotlib/collections.py:1985[0m, in [0;36mQuadMesh.__init__[0;34m(self, *args, **kwargs)[0m
[1;32m   1983[0m [38;5;28mself[39m[38;5;241m.[39m_shading [38;5;241m=[39m shading
[1;32m   1984[0m [38;5;28mself[39m[38;5;241m.[39m_bbox [38;5;241m=[39m transforms[38;5;241m.[39mBbox[38;5;241m.[39munit()
[0;32m-> 1985[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_bbox[49m[38;5;241;43m.[39;49m[43mupdate_from_data_xy[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_coordinates[49m[38;5;241;43m.[39;49m[43mreshape[49m[43m([49m[38;5;241;43m-[39;49m[38;5;241;43m1[39;49m[43m,[49m[43m [49m[38;5;241;43m2[39;49m[43m)[49m[43m)[49m
[1;32m   1986[0m [38;5;66;03m# super init delayed after own init because array kwarg requires[39;00m
[1;32m   1987[0m [38;5;66;03m# self._coordinates and self._shading[39;00m
[1;32m   1988[0m [38;5;28msuper[39m()[38;5;241m.[39m[38;5;21m__init__[39m([38;5;241m*[39m[38;5;241m*[39mkwargs)

File [0;32m/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/matplotlib/transforms.py:954[0m, in [0;36mBbox.update_from_data_xy[0;34m(self, xy, ignore, updatex, updatey)[0m
[1;32m    951[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(xy) [38;5;241m==[39m [38;5;241m0[39m:
[1;32m    952[0m     [38;5;28;01mreturn[39;00m
[0;32m--> 954[0m path [38;5;241m=[39m [43mPath[49m[43m([49m[43mxy[49m[43m)[49m
[1;32m    955[0m [38;5;28mself[39m[38;5;241m.[39mupdate_from_path(path, ignore[38;5;241m=[39mignore,
[1;32m    956[0m                       updatex[38;5;241m=[39mupdatex, updatey[38;5;241m=[39mupdatey)

File [0;32m/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/matplotlib/path.py:129[0m, in [0;36mPath.__init__[0;34m(self, vertices, codes, _interpolation_steps, closed, readonly)[0m
[1;32m     99[0m [38;5;28;01mdef[39;00m [38;5;21m__init__[39m([38;5;28mself[39m, vertices, codes[38;5;241m=[39m[38;5;28;01mNone[39;00m, _interpolation_steps[38;5;241m=[39m[38;5;241m1[39m,
[1;32m    100[0m              closed[38;5;241m=[39m[38;5;28;01mFalse[39;00m, readonly[38;5;241m=[39m[38;5;28;01mFalse[39;00m):
[1;32m    101[0m     [38;5;124;03m"""[39;00m
[1;32m    102[0m [38;5;124;03m    Create a new path with the given vertices and codes.[39;00m
[1;32m    103[0m 
[0;32m   (...)[0m
[1;32m    127[0m [38;5;124;03m        and codes as read-only arrays.[39;00m
[1;32m    128[0m [38;5;124;03m    """[39;00m
[0;32m--> 129[0m     vertices [38;5;241m=[39m [43m_to_unmasked_float_array[49m[43m([49m[43mvertices[49m[43m)[49m
[1;32m    130[0m     _api[38;5;241m.[39mcheck_shape(([38;5;28;01mNone[39;00m, [38;5;241m2[39m), vertices[38;5;241m=[39mvertices)
[1;32m    132[0m     [38;5;28;01mif[39;00m codes [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/usr/share/miniconda/envs/dev-feisty/lib/python3.8/site-packages/matplotlib/cbook/__init__.py:1369[0m, in [0;36m_to_unmasked_float_array[0;34m(x)[0m
[1;32m   1367[0m     [38;5;28;01mreturn[39;00m np[38;5;241m.[39mma[38;5;241m.[39masarray(x, [38;5;28mfloat[39m)[38;5;241m.[39mfilled(np[38;5;241m.[39mnan)
[1;32m   1368[0m [38;5;28;01melse[39;00m:
[0;32m-> 1369[0m     [38;5;28;01mreturn[39;00m [43mnp[49m[38;5;241;43m.[39;49m[43masarray[49m[43m([49m[43mx[49m[43m,[49m[43m [49m[38;5;28;43mfloat[39;49m[43m)[49m

[0;31mTypeError[0m: float() argument must be a string or a number, not 'cftime._cftime.DatetimeNoLeap'
TypeError: float() argument must be a string or a number, not 'cftime._cftime.DatetimeNoLeap'

